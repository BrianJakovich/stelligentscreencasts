{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Template to configure chef on an EC2 Instance",

  "Parameters" : {
    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type" : "String"
    }
  },

  "Mappings" : {
    "RegionMap" : {
      "us-east-1"      : { "AMI" : "ami-7f418316" },
      "us-west-1"      : { "AMI" : "ami-951945d0" },
      "us-west-2"      : { "AMI" : "ami-16fd7026" },
      "eu-west-1"      : { "AMI" : "ami-24506250" },
      "sa-east-1"      : { "AMI" : "ami-3e3be423" },
      "ap-southeast-1" : { "AMI" : "ami-74dda626" },
      "ap-northeast-1" : { "AMI" : "ami-dcfa4edd" }
    }
  },

  "Resources" : {
    "RootRole" : {
      "Type" : "AWS::IAM::Role",
      "Properties" : {
        "AssumeRolePolicyDocument" : {
          "Statement" : [{
            "Effect" : "Allow",
            "Principal" : {
              "Service" : [ "ec2.amazonaws.com"]
            },
            "Action" : ["sts:AssumeRole"]
          }]
        },
        "Path" : "/",
        "Policies" : [{
          "PolicyName" : "root",
          "PolicyDocument" : {
            "Statement" : [{
              "Effect" : "Allow",
              "Action" : "*",
              "Resource" : "*"
            }]
          }
        }]
      }
    },
    "RootInstanceProfile" : {
      "Type" : "AWS::IAM::InstanceProfile",
      "Properties" : {
        "Path" : "/",
        "Roles" : [{
          "Ref" : "RootRole"
        }]
      }
    },
    "User" : {
      "Type" : "AWS::IAM::User",
      "Properties" : {
        "Path": "/",
        "Policies": [{
          "PolicyName": "root",
          "PolicyDocument": { "Statement":[{
            "Effect":"Allow",
            "Action":"*",
            "Resource":"*"
          }
                                          ]}
        }]
      }
    },

    "HostKeys" : {
      "Type" : "AWS::IAM::AccessKey",
      "Properties" : {
        "UserName" : { "Ref": "User" }
      }
    },

    "ElasticLoadBalancer" : {
	  "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
	  "Properties" : {
		"AvailabilityZones" : { "Fn::GetAZs" : "" },
		"Listeners" : [{
			"LoadBalancerPort" : "80",
			"InstancePort" : "8080",
			"Protocol" : "HTTP"
		}],
		"HealthCheck" : {
			"Target" : "HTTP:8080/jenkins/",
			"HealthyThreshold" : "3",
			"UnhealthyThreshold" : "5",
			"Interval" : "30",
			"Timeout" : "5"
		}
	}
},

    "WebServerGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "LoadBalancerNames" : [{"Ref" : "ElasticLoadBalancer"}],
        "LaunchConfigurationName" : { "Ref" : "LaunchConfig" },
        "MinSize" : "1",
        "MaxSize" : "10",
        "DesiredCapacity" : "3"
      }
    },

    "LaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "packages" : {
              "yum" : {
                "gcc-c++"       : [],
                "autoconf"      : [],
                "automake"      : [],
                "libxml2-devel" : [],
                "libxslt-devel" : []
              }
            },
            "files" : {
              "/etc/chef/stelligentlabs-validator.pem" : {
                "source" : "https://s3.amazonaws.com/StelligentResources/stelligentlabs-validator.pem",
                "authentication" : "S3AccessCreds"
              },
              "/etc/chef/client.rb" : {
                "content" : { "Fn::Join" : ["", [
                  "log_level        :info\n",
                  "log_location     STDOUT\n",
                  "chef_server_url  \"https://api.opscode.com/organizations/stelligentlabs\"\n",
                  "validation_key         \"/etc/chef/stelligentlabs-validator.pem\"\n",
                  "validation_client_name \"stelligentlabs-validator\""
                ]] },
                "mode" : "000644",
                "owner" : "root",
                "group" : "wheel"
              },
              "/etc/chef/node.json" : {
                "content" : {
                  "run_list": [ "role[jenkins]" ]
                },
                "mode" : "000644",
                "owner" : "root",
                "group" : "wheel"
              }
            }
          }
        },
        "AWS::CloudFormation::Authentication" : {
          "S3AccessCreds" : {
            "type" : "S3",
            "accessKeyId" : { "Ref" : "HostKeys" },
            "secretKey" : {"Fn::GetAtt": ["HostKeys", "SecretAccessKey"]},
            "buckets" : [ "StelligentScreencasts" ]
          }
        }
      },

      "Properties" : {
        "InstanceType" : "m1.small",
        "IamInstanceProfile" : { "Ref" : "RootInstanceProfile" },
        "KeyName" : { "Ref" : "KeyName" },
        "SecurityGroups" : [ {"Ref" : "FrontendGroup"} ],
        "ImageId" : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash\n",
          "yum update -y aws-cfn-bootstrap\n",

          "# Remove Ruby 1.8.7\n",
          "yum erase -y ruby rubygems\n",

          "# Install Ruby 1.9.3\n",
          "yum -y install ruby19-devel\n",

          "# Move Ruby 1.9.3 to Default Ruby\n",
          "ln -s /usr/bin/ruby1.9 /usr/bin/ruby\n",
          "ln -s /usr/bin/gem1.9 /usr/bin/gem\n",

          "# Install Chef\n",
          "wget https://opscode-omnibus-packages.s3.amazonaws.com/el/6/i686/chef-11.4.4-2.el6.i686.rpm\n",
          "rpm -Uvh chef-11.4.4-2.el6.i686.rpm\n",

          "/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackId" }, " -r LaunchConfig ",
          "    --access-key ", { "Ref" : "HostKeys" },
          "    --secret-key ", { "Fn::GetAtt" : [ "HostKeys", "SecretAccessKey" ]},
          "    --region ", { "Ref" : "AWS::Region" }, "\n",

          "chef-client -j /etc/chef/node.json\n",
          "/opt/aws/bin/cfn-signal -e $? '", { "Ref" : "WaitHandle" }, "'\n"
        ]]}}
      }
    },

    "FrontendGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH and access to Apache and Tomcat",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "8080", "ToPort" : "8080", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"}
        ]
      }
    },

    "WaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

    "WaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "LaunchConfig",
      "Properties" : {
        "Handle" : { "Ref" : "WaitHandle" },
        "Timeout" : "1200"
      }
    }
  },

  "Outputs" : {
  }
}
